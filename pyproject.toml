[project]
name = "cedar-python"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "Guillaume Charbonnier", email = "gcharbonnier@fieldbox.ai" },
]
requires-python = ">=3.9"
dependencies = []

[build-system]
requires = ["setuptools", "setuptools-rust"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages]
# Pure Python packages/modules
find = { where = ["python"] }

[[tool.setuptools-rust.ext-modules]]
# Private Rust extension module to be nested into the Python package
target = "cedar._lib"  # The last part of the name (e.g. "_lib") has to match lib.name in Cargo.toml,
                             # but you can add a prefix to nest it inside of a Python package.
path = "Cargo.toml"      # Default value, can be omitted
binding = "PyO3"         # Default value, can be omitted
debug = false

#########################
# Mypy
#########################

[tool.mypy]
strict = true
mypy_path = "python"
files = "python"

[tool.ruff]
exclude = ["e2e/cedar-integration-tests"]

[dependency-groups]
dev = [
    "mypy>=1.15.0",
    "pytest>=8.3.5",
    "ruff>=0.10.0",
]
docs = [
    "mike>=2.1.3",
    "mkdocs-literate-nav>=0.6.1",
    "mkdocs-material>=9.6.8",
    "mkdocstrings>=0.29.0",
    "mkdocstrings-python>=1.16.5",
    "pymdown-extensions>=10.14.3",
]
